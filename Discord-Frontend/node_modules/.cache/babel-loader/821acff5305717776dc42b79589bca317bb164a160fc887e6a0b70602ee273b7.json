{"ast":null,"code":"import io from \"socket.io-client\";\nimport { setPendingFriendsInvitations, setOnlineUsers, setFriends } from \"../store/actions/friendsActions\";\nimport store from \"../store/store\";\nlet socket = null;\nexport const connectWithSocketServer = userDetails => {\n  const jwtToken = userDetails.token;\n  socket = io('http://localhost:5001', {\n    auth: {\n      token: jwtToken\n    }\n  });\n  socket.on('connect', () => {\n    console.log(\"successfully connected with socket.io server\");\n    console.log(socket.id);\n  });\n  socket.on('friends-invitations', data => {\n    const {\n      pendingInvitations\n    } = data;\n    store.dispatch(setPendingFriendsInvitations(pendingInvitations));\n  });\n  socket.on('friends-list', data => {\n    const {\n      friends\n    } = data;\n    store.dispatch(setFriends(friends));\n  });\n  socket.on('online-users', data => {\n    const {\n      onlineUsers\n    } = data;\n    store.dispatch(setOnlineUsers(onlineUsers));\n  });\n};","map":{"version":3,"names":["io","setPendingFriendsInvitations","setOnlineUsers","setFriends","store","socket","connectWithSocketServer","userDetails","jwtToken","token","auth","on","console","log","id","data","pendingInvitations","dispatch","friends","onlineUsers"],"sources":["/home/sameeramp/Desktop/DiscordClone/Frontend/src/realtimeCommunication/socketConnection.js"],"sourcesContent":["import io from \"socket.io-client\"\nimport { setPendingFriendsInvitations,  setOnlineUsers, setFriends } from \"../store/actions/friendsActions\";\nimport store from \"../store/store\"\n\nlet socket = null\n\nexport const connectWithSocketServer = (userDetails) => {\n\n    const jwtToken = userDetails.token\n\n\n    socket = io('http://localhost:5001', {\n        auth: {\n            token: jwtToken,\n        },\n    });\n\n    socket.on('connect', () => {\n        console.log(\"successfully connected with socket.io server\")\n        console.log(socket.id)\n    })\n\n    socket.on('friends-invitations', (data) => {\n\n\n        const { pendingInvitations } = data;\n\n\n\n\n        store.dispatch(setPendingFriendsInvitations(pendingInvitations))\n    })\n\n   \n\n\n    socket.on('friends-list', (data) => {\n        const { friends } = data;\n        store.dispatch(setFriends(friends))\n    })\n\n    socket.on('online-users', (data) => {\n        \n        const { onlineUsers } = data;\n        store.dispatch( setOnlineUsers(onlineUsers))\n\n    })\n}"],"mappings":"AAAA,OAAOA,EAAE,MAAM,kBAAkB;AACjC,SAASC,4BAA4B,EAAGC,cAAc,EAAEC,UAAU,QAAQ,iCAAiC;AAC3G,OAAOC,KAAK,MAAM,gBAAgB;AAElC,IAAIC,MAAM,GAAG,IAAI;AAEjB,OAAO,MAAMC,uBAAuB,GAAIC,WAAW,IAAK;EAEpD,MAAMC,QAAQ,GAAGD,WAAW,CAACE,KAAK;EAGlCJ,MAAM,GAAGL,EAAE,CAAC,uBAAuB,EAAE;IACjCU,IAAI,EAAE;MACFD,KAAK,EAAED;IACX;EACJ,CAAC,CAAC;EAEFH,MAAM,CAACM,EAAE,CAAC,SAAS,EAAE,MAAM;IACvBC,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;IAC3DD,OAAO,CAACC,GAAG,CAACR,MAAM,CAACS,EAAE,CAAC;EAC1B,CAAC,CAAC;EAEFT,MAAM,CAACM,EAAE,CAAC,qBAAqB,EAAGI,IAAI,IAAK;IAGvC,MAAM;MAAEC;IAAmB,CAAC,GAAGD,IAAI;IAKnCX,KAAK,CAACa,QAAQ,CAAChB,4BAA4B,CAACe,kBAAkB,CAAC,CAAC;EACpE,CAAC,CAAC;EAKFX,MAAM,CAACM,EAAE,CAAC,cAAc,EAAGI,IAAI,IAAK;IAChC,MAAM;MAAEG;IAAQ,CAAC,GAAGH,IAAI;IACxBX,KAAK,CAACa,QAAQ,CAACd,UAAU,CAACe,OAAO,CAAC,CAAC;EACvC,CAAC,CAAC;EAEFb,MAAM,CAACM,EAAE,CAAC,cAAc,EAAGI,IAAI,IAAK;IAEhC,MAAM;MAAEI;IAAY,CAAC,GAAGJ,IAAI;IAC5BX,KAAK,CAACa,QAAQ,CAAEf,cAAc,CAACiB,WAAW,CAAC,CAAC;EAEhD,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}